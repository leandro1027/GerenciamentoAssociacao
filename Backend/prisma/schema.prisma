generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                   Int         @id @default(autoincrement())
  nome                 String
  email                String
  senha                String
  role                 String      @default("USER")
  telefone             String?
  profileImageUrl      String?
  voluntario           Voluntario?
  doacoes              Doacao[]
  adocoes              Adocao[]
  divulgacoes_aprovadas String?
  divulgacoes Divulgacao[]
  divulgacoes_aprovadas Int      @default(0)
  passwordResetToken   String?
  passwordResetExpires DateTime?
}

model Voluntario {
  id        Int      @id @default(autoincrement())
  usuarioId Int      @unique
  motivo    String
  status    String   @default("pendente")
  createdAt DateTime @default(now()) 
  usuario   Usuario  @relation(fields: [usuarioId], references: [id])
}

model Doacao {
  id        Int       @id @default(autoincrement())
  valor     Float
  tipo      String
  data      DateTime  @default(now())
  usuarioId Int?      // Torna o campo de ID opcional
  usuario   Usuario?  @relation(fields: [usuarioId], references: [id]) // Torna a relação opcional
}

model Slide {
  id        Int      @id @default(autoincrement())
  imageUrl  String
  title     String
  subtitle  String?
  createdAt DateTime @default(now())
}

enum Especie {
  CAO
  GATO
}

enum Sexo {
  MACHO
  FEMEA
}

enum Porte {
  PEQUENO
  MEDIO
  GRANDE
}

enum StatusAnimal {
  DISPONIVEL
  EM_PROCESSO_ADOCAO
  ADOTADO
}

model Animal {
  id               String       @id @default(uuid())
  nome             String
  animalImageUrl   String?
  descricao        String      
  especie          Especie
  sexo             Sexo
  porte            Porte
  raca             String
  idade            String
  castrado         Boolean 
  disponivel       Boolean      @default(true)
  status           StatusAnimal @default(DISPONIVEL)
  pedidosAdocao    Adocao[]
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
}

enum StatusAdocao {
  SOLICITADA
  EM_ANALISE
  APROVADA
  RECUSADA
}

model Adocao {
  id                String       @id @default(uuid())
  dataSolicitacao   DateTime     @default(now())
  dataFinalizacao   DateTime?
  status            StatusAdocao @default(SOLICITADA)
  observacoesAdmin  String?
  tipoMoradia      String? 
  outrosAnimais    String? 
  tempoDisponivel  String?
  motivoAdocao     String?
  usuario           Usuario      @relation(fields: [usuarioId], references: [id])
  usuarioId         Int
  animal            Animal       @relation(fields: [animalId], references: [id])
  animalId          String
  recompensa_concedida Boolean    @default(false) 
  recompensa_detalhes    String?
  @@unique([usuarioId, animalId])
}

enum DivulgacaoStatus {
  PENDENTE
  REVISADO
  REJEITADO
}

model Divulgacao {
  id              String   @id @default(uuid())
  localizacao     String
  raca            String
  castrado        Boolean
  resgate         Boolean
  imageUrl        String
  descricao       String?
  status          DivulgacaoStatus @default(PENDENTE)
  createdAt       DateTime @default(now())
  usuario         Usuario  @relation(fields: [usuarioId], references: [id])
  usuarioId       Int
}

model ConteudoHome {
  id        Int      @id @default(1) //sempre o ID 1 para ter uma única entrada
  titulo    String
  subtitulo String
  itens     String  
  imagemUrl String
  updatedAt DateTime @updatedAt
}
model Parceiro {
  id        Int      @id @default(autoincrement())
  nome      String
  logoUrl   String
  createdAt DateTime @default(now())
}



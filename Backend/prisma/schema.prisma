generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                   Int         @id @default(autoincrement())
  nome                 String
  email                String
  senha                String
  role                 String      @default("USER")
  telefone             String?
  profileImageUrl      String?
  voluntario           Voluntario?
  doacoes              Doacao[]
  adocoes              Adocao[]
  passwordResetToken   String?
  passwordResetExpires DateTime?
}

model Voluntario {
  id        Int      @id @default(autoincrement())
  usuarioId Int      @unique
  motivo    String
  status    String   @default("pendente")
  usuario   Usuario  @relation(fields: [usuarioId], references: [id])
}

model Doacao {
  id        Int      @id @default(autoincrement())
  usuarioId Int
  valor     Float
  tipo      String
  data      DateTime @default(now())
  usuario   Usuario  @relation(fields: [usuarioId], references: [id])
}

model Slide {
  id        Int      @id @default(autoincrement())
  imageUrl  String
  title     String
  subtitle  String?
  createdAt DateTime @default(now())
}

enum Especie {
  CAO
  GATO
}

enum Sexo {
  MACHO
  FEMEA
}

enum Porte {
  PEQUENO
  MEDIO
  GRANDE
}

enum StatusAnimal {
  DISPONIVEL
  EM_PROCESSO_ADOCAO
  ADOTADO
}

model Animal {
  id               String       @id @default(uuid())
  nome             String
  animalImageUrl   String?
  descricao        String      
  especie          Especie
  sexo             Sexo
  porte            Porte
  raca             String
  idade            String
  disponivel       Boolean      @default(true)
  status           StatusAnimal @default(DISPONIVEL)
  pedidosAdocao    Adocao[]
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
}

enum StatusAdocao {
  SOLICITADA
  EM_ANALISE
  APROVADA
  RECUSADA
}

model Adocao {
  id                String       @id @default(uuid())
  dataSolicitacao   DateTime     @default(now())
  dataFinalizacao   DateTime?
  status            StatusAdocao @default(SOLICITADA)
  observacoesAdmin  String?

  tipoMoradia      String?  // Ex: "Casa com pátio", "Apartamento"
  outrosAnimais    String?  // Ex: "Sim, um cão", "Não"
  tempoDisponivel  String?  // Ex: "Manhãs e noites", "Integral"
  motivoAdocao     String?
  
  usuario           Usuario      @relation(fields: [usuarioId], references: [id])
  usuarioId         Int

  animal            Animal       @relation(fields: [animalId], references: [id])
  animalId          String

  @@unique([usuarioId, animalId])
}
